{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkConnect\\\\WorkConnect\\\\frontend\\\\src\\\\contexts\\\\JobsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobsContext = /*#__PURE__*/createContext(null);\nfunction formatSalary(min, max, currency, frequency) {\n  if (min == null && max == null && !currency) return '';\n  const fmt = v => {\n    if (v == null) return null;\n    // show thousands separator\n    try {\n      return Number(v).toLocaleString();\n    } catch (e) {\n      return String(v);\n    }\n  };\n  const fmin = fmt(min);\n  const fmax = fmt(max);\n  const freqLabel = frequency === 'hourly' ? '/hr' : '/yr';\n  if (fmin && fmax) return `${currency ? currency + ' ' : ''}${fmin} - ${fmax}${currency ? '' : ''} ${freqLabel}`.trim();\n  if (fmin) return `${currency ? currency + ' ' : ''}${fmin} ${freqLabel}`.trim();\n  if (fmax) return `${currency ? currency + ' ' : ''}${fmax} ${freqLabel}`.trim();\n  return '';\n}\nexport function JobsProvider({\n  children\n}) {\n  _s();\n  const defaultJobs = [{\n    id: 1,\n    title: 'Product Designer',\n    company: 'Acme Company',\n    location: 'Remote',\n    type: 'Full-time',\n    salary: '$40k - $60k',\n    summary: 'Design delightful product experiences.',\n    description: 'Work with cross-functional teams to design user experiences.',\n    easyApply: true,\n    isRemote: true,\n    isHybrid: false,\n    isFullTime: true,\n    postedAt: '2025-10-10',\n    applied: false,\n    exclusive: false\n  }, {\n    id: 2,\n    title: 'UI/UX Designer',\n    company: 'DesignCo',\n    location: 'Lisbon, PT',\n    type: 'Contract',\n    salary: '$30/hr',\n    summary: 'Create UI mockups and prototypes.',\n    description: 'Collaborate with product team to deliver high-fidelity designs.',\n    easyApply: false,\n    isRemote: false,\n    isHybrid: false,\n    isFullTime: false,\n    postedAt: '2025-10-12',\n    applied: true,\n    exclusive: true\n  }, {\n    id: 3,\n    title: 'Frontend Engineer',\n    company: 'Webify',\n    location: 'Manila, PH',\n    type: 'Full-time',\n    salary: '$20k - $35k',\n    summary: 'Implement UI using React.',\n    description: 'Develop and maintain frontend components and pages.',\n    easyApply: true,\n    isRemote: false,\n    isHybrid: false,\n    isFullTime: true,\n    postedAt: '2025-09-30',\n    applied: false,\n    exclusive: false\n  }];\n  const [jobs, setJobs] = useState(() => {\n    try {\n      const raw = localStorage.getItem('wc_jobs');\n      return raw ? JSON.parse(raw) : defaultJobs;\n    } catch (e) {\n      return defaultJobs;\n    }\n  });\n\n  // persist locally\n  useEffect(() => {\n    try {\n      localStorage.setItem('wc_jobs', JSON.stringify(jobs));\n    } catch (e) {\n      // ignore storage errors\n    }\n  }, [jobs]);\n\n  // try to fetch from backend on mount — if available, use backend list (overrides local)\n  useEffect(() => {\n    let mounted = true;\n    async function fetchJobs() {\n      try {\n        const res = await fetch('/api/jobs');\n        if (!res.ok) return;\n        const data = await res.json();\n        if (!mounted) return;\n        // normalize postedAt to date-only string for older entries\n        const normalized = data.map(j => ({\n          ...j,\n          postedAt: j.postedAt ? j.postedAt.toString().slice(0, 10) : ''\n        }));\n        setJobs(normalized);\n      } catch (e) {\n        // backend not available — keep local jobs\n      }\n    }\n    fetchJobs();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  function addJob(job) {\n    // returns a promise resolving to the mapped job (server-saved or local fallback)\n    return (async _job$description => {\n      try {\n        const res = await fetch('/api/jobs', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(job)\n        });\n        if (res.ok) {\n          const saved = await res.json();\n          // server returns created job with _id\n          const mapped = {\n            id: saved._id || saved.id || Date.now(),\n            title: saved.title,\n            company: saved.company,\n            location: saved.location || (saved.city ? `${saved.city}${saved.stateOrProvince ? ', ' + saved.stateOrProvince : ''}${saved.country ? ', ' + saved.country : ''}` : ''),\n            city: saved.city || null,\n            stateOrProvince: saved.stateOrProvince || null,\n            country: saved.country || null,\n            type: saved.type,\n            minSalary: saved.minSalary,\n            maxSalary: saved.maxSalary,\n            currency: saved.currency,\n            salary: formatSalary(saved.minSalary, saved.maxSalary, saved.currency, saved.salaryFrequency),\n            logoUrl: saved.logoUrl,\n            logoName: saved.logoName,\n            summary: saved.summary,\n            description: saved.description,\n            easyApply: saved.easyApply,\n            isRemote: saved.isRemote,\n            isHybrid: saved.isHybrid,\n            isFullTime: saved.isFullTime,\n            postedAt: saved.postedAt ? saved.postedAt.toString().slice(0, 10) : new Date().toISOString().slice(0, 10),\n            applied: saved.applied || false,\n            exclusive: saved.exclusive || false\n          };\n          setJobs(prev => [mapped, ...prev]);\n          return mapped;\n        }\n      } catch (e) {\n        // backend not reachable — fallback to local\n      }\n      const newJob = {\n        id: Date.now(),\n        title: job.title || 'Untitled',\n        company: job.company || 'Unknown',\n        location: job.location || (job.city ? `${job.city}${job.stateOrProvince ? ', ' + job.stateOrProvince : ''}${job.country ? ', ' + job.country : ''}` : ''),\n        city: job.city || null,\n        stateOrProvince: job.stateOrProvince || null,\n        country: job.country || null,\n        type: job.type || '',\n        minSalary: job.minSalary || null,\n        maxSalary: job.maxSalary || null,\n        currency: job.currency || '',\n        salary: formatSalary(job.minSalary, job.maxSalary, job.currency, job.salaryFrequency),\n        logoUrl: job.logoUrl || null,\n        logoName: job.logoName || '',\n        summary: job.summary || ((_job$description = job.description) === null || _job$description === void 0 ? void 0 : _job$description.slice(0, 120)) || '',\n        description: job.description || job.summary || '',\n        easyApply: !!job.easyApply,\n        isRemote: job.workArrangement === 'remote' || false,\n        isHybrid: job.workArrangement === 'hybrid' || false,\n        isFullTime: job.type && job.type.toLowerCase().includes('full'),\n        postedAt: new Date().toISOString().slice(0, 10),\n        applied: false,\n        exclusive: !!job.exclusive\n      };\n      setJobs(prev => [newJob, ...prev]);\n      return newJob;\n    })();\n  }\n  return /*#__PURE__*/_jsxDEV(JobsContext.Provider, {\n    value: {\n      jobs,\n      setJobs,\n      addJob\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n_s(JobsProvider, \"tNOCHhNH5K7KINjFK4isuP/rJYs=\");\n_c = JobsProvider;\nexport function useJobs() {\n  _s2();\n  const ctx = useContext(JobsContext);\n  if (!ctx) throw new Error('useJobs must be used within JobsProvider');\n  return ctx;\n}\n_s2(useJobs, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"JobsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","JobsContext","formatSalary","min","max","currency","frequency","fmt","v","Number","toLocaleString","e","String","fmin","fmax","freqLabel","trim","JobsProvider","children","_s","defaultJobs","id","title","company","location","type","salary","summary","description","easyApply","isRemote","isHybrid","isFullTime","postedAt","applied","exclusive","jobs","setJobs","raw","localStorage","getItem","JSON","parse","setItem","stringify","mounted","fetchJobs","res","fetch","ok","data","json","normalized","map","j","toString","slice","addJob","job","_job$description","method","headers","body","saved","mapped","_id","Date","now","city","stateOrProvince","country","minSalary","maxSalary","salaryFrequency","logoUrl","logoName","toISOString","prev","newJob","workArrangement","toLowerCase","includes","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useJobs","_s2","ctx","Error","$RefreshReg$"],"sources":["C:/WorkConnect/WorkConnect/frontend/src/contexts/JobsContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nconst JobsContext = createContext(null);\r\n\r\nfunction formatSalary(min, max, currency, frequency) {\r\n  if (min == null && max == null && !currency) return '';\r\n  const fmt = (v) => {\r\n    if (v == null) return null;\r\n    // show thousands separator\r\n    try { return Number(v).toLocaleString(); } catch (e) { return String(v); }\r\n  };\r\n  const fmin = fmt(min);\r\n  const fmax = fmt(max);\r\n  const freqLabel = frequency === 'hourly' ? '/hr' : '/yr';\r\n  if (fmin && fmax) return `${currency ? currency + ' ' : ''}${fmin} - ${fmax}${currency ? '' : ''} ${freqLabel}`.trim();\r\n  if (fmin) return `${currency ? currency + ' ' : ''}${fmin} ${freqLabel}`.trim();\r\n  if (fmax) return `${currency ? currency + ' ' : ''}${fmax} ${freqLabel}`.trim();\r\n  return '';\r\n}\r\n\r\nexport function JobsProvider({ children }) {\r\n  const defaultJobs = [\r\n    {\r\n      id: 1,\r\n      title: 'Product Designer',\r\n      company: 'Acme Company',\r\n      location: 'Remote',\r\n      type: 'Full-time',\r\n      salary: '$40k - $60k',\r\n      summary: 'Design delightful product experiences.',\r\n      description: 'Work with cross-functional teams to design user experiences.',\r\n      easyApply: true,\r\n      isRemote: true,\r\n      isHybrid: false,\r\n      isFullTime: true,\r\n      postedAt: '2025-10-10',\r\n      applied: false,\r\n      exclusive: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'UI/UX Designer',\r\n      company: 'DesignCo',\r\n      location: 'Lisbon, PT',\r\n      type: 'Contract',\r\n      salary: '$30/hr',\r\n      summary: 'Create UI mockups and prototypes.',\r\n      description: 'Collaborate with product team to deliver high-fidelity designs.',\r\n      easyApply: false,\r\n      isRemote: false,\r\n      isHybrid: false,\r\n      isFullTime: false,\r\n      postedAt: '2025-10-12',\r\n      applied: true,\r\n      exclusive: true,\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Frontend Engineer',\r\n      company: 'Webify',\r\n      location: 'Manila, PH',\r\n      type: 'Full-time',\r\n      salary: '$20k - $35k',\r\n      summary: 'Implement UI using React.',\r\n      description: 'Develop and maintain frontend components and pages.',\r\n      easyApply: true,\r\n      isRemote: false,\r\n      isHybrid: false,\r\n      isFullTime: true,\r\n      postedAt: '2025-09-30',\r\n      applied: false,\r\n      exclusive: false,\r\n    }\r\n  ];\r\n\r\n  const [jobs, setJobs] = useState(() => {\r\n    try {\r\n      const raw = localStorage.getItem('wc_jobs');\r\n      return raw ? JSON.parse(raw) : defaultJobs;\r\n    } catch (e) {\r\n      return defaultJobs;\r\n    }\r\n  });\r\n\r\n  // persist locally\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('wc_jobs', JSON.stringify(jobs));\r\n    } catch (e) {\r\n      // ignore storage errors\r\n    }\r\n  }, [jobs]);\r\n\r\n  // try to fetch from backend on mount — if available, use backend list (overrides local)\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    async function fetchJobs() {\r\n      try {\r\n        const res = await fetch('/api/jobs');\r\n        if (!res.ok) return;\r\n        const data = await res.json();\r\n        if (!mounted) return;\r\n        // normalize postedAt to date-only string for older entries\r\n  const normalized = data.map(j => ({ ...j, postedAt: j.postedAt ? j.postedAt.toString().slice(0,10) : '' }));\r\n        setJobs(normalized);\r\n      } catch (e) {\r\n        // backend not available — keep local jobs\r\n      }\r\n    }\r\n    fetchJobs();\r\n    return () => { mounted = false; };\r\n  }, []);\r\n\r\n  function addJob(job) {\r\n    // returns a promise resolving to the mapped job (server-saved or local fallback)\r\n    return (async () => {\r\n      try {\r\n        const res = await fetch('/api/jobs', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(job) });\r\n        if (res.ok) {\r\n          const saved = await res.json();\r\n          // server returns created job with _id\r\n          const mapped = {\r\n            id: saved._id || saved.id || Date.now(),\r\n            title: saved.title,\r\n            company: saved.company,\r\n            location: saved.location || (saved.city ? `${saved.city}${saved.stateOrProvince ? ', ' + saved.stateOrProvince : ''}${saved.country ? ', ' + saved.country : ''}` : ''),\r\n            city: saved.city || null,\r\n            stateOrProvince: saved.stateOrProvince || null,\r\n            country: saved.country || null,\r\n            type: saved.type,\r\n            minSalary: saved.minSalary,\r\n            maxSalary: saved.maxSalary,\r\n            currency: saved.currency,\r\n            salary: formatSalary(saved.minSalary, saved.maxSalary, saved.currency, saved.salaryFrequency),\r\n            logoUrl: saved.logoUrl,\r\n            logoName: saved.logoName,\r\n            summary: saved.summary,\r\n            description: saved.description,\r\n            easyApply: saved.easyApply,\r\n            isRemote: saved.isRemote,\r\n            isHybrid: saved.isHybrid,\r\n            isFullTime: saved.isFullTime,\r\n            postedAt: saved.postedAt ? saved.postedAt.toString().slice(0,10) : new Date().toISOString().slice(0,10),\r\n            applied: saved.applied || false,\r\n            exclusive: saved.exclusive || false,\r\n          };\r\n          setJobs(prev => [mapped, ...prev]);\r\n          return mapped;\r\n        }\r\n      } catch (e) {\r\n        // backend not reachable — fallback to local\r\n      }\r\n\r\n      const newJob = {\r\n        id: Date.now(),\r\n        title: job.title || 'Untitled',\r\n        company: job.company || 'Unknown',\r\n        location: job.location || (job.city ? `${job.city}${job.stateOrProvince ? ', ' + job.stateOrProvince : ''}${job.country ? ', ' + job.country : ''}` : ''),\r\n        city: job.city || null,\r\n        stateOrProvince: job.stateOrProvince || null,\r\n        country: job.country || null,\r\n        type: job.type || '',\r\n        minSalary: job.minSalary || null,\r\n        maxSalary: job.maxSalary || null,\r\n        currency: job.currency || '',\r\n        salary: formatSalary(job.minSalary, job.maxSalary, job.currency, job.salaryFrequency),\r\n        logoUrl: job.logoUrl || null,\r\n        logoName: job.logoName || '',\r\n        summary: job.summary || job.description?.slice(0, 120) || '',\r\n        description: job.description || job.summary || '',\r\n        easyApply: !!job.easyApply,\r\n        isRemote: job.workArrangement === 'remote' || false,\r\n        isHybrid: job.workArrangement === 'hybrid' || false,\r\n        isFullTime: job.type && job.type.toLowerCase().includes('full'),\r\n        postedAt: new Date().toISOString().slice(0, 10),\r\n        applied: false,\r\n        exclusive: !!job.exclusive,\r\n      };\r\n      setJobs(prev => [newJob, ...prev]);\r\n      return newJob;\r\n    })();\r\n  }\r\n\r\n  return (\r\n    <JobsContext.Provider value={{ jobs, setJobs, addJob }}>\r\n      {children}\r\n    </JobsContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useJobs() {\r\n  const ctx = useContext(JobsContext);\r\n  if (!ctx) throw new Error('useJobs must be used within JobsProvider');\r\n  return ctx;\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,SAASO,YAAYA,CAACC,GAAG,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAE;EACnD,IAAIH,GAAG,IAAI,IAAI,IAAIC,GAAG,IAAI,IAAI,IAAI,CAACC,QAAQ,EAAE,OAAO,EAAE;EACtD,MAAME,GAAG,GAAIC,CAAC,IAAK;IACjB,IAAIA,CAAC,IAAI,IAAI,EAAE,OAAO,IAAI;IAC1B;IACA,IAAI;MAAE,OAAOC,MAAM,CAACD,CAAC,CAAC,CAACE,cAAc,CAAC,CAAC;IAAE,CAAC,CAAC,OAAOC,CAAC,EAAE;MAAE,OAAOC,MAAM,CAACJ,CAAC,CAAC;IAAE;EAC3E,CAAC;EACD,MAAMK,IAAI,GAAGN,GAAG,CAACJ,GAAG,CAAC;EACrB,MAAMW,IAAI,GAAGP,GAAG,CAACH,GAAG,CAAC;EACrB,MAAMW,SAAS,GAAGT,SAAS,KAAK,QAAQ,GAAG,KAAK,GAAG,KAAK;EACxD,IAAIO,IAAI,IAAIC,IAAI,EAAE,OAAO,GAAGT,QAAQ,GAAGA,QAAQ,GAAG,GAAG,GAAG,EAAE,GAAGQ,IAAI,MAAMC,IAAI,GAAGT,QAAQ,GAAG,EAAE,GAAG,EAAE,IAAIU,SAAS,EAAE,CAACC,IAAI,CAAC,CAAC;EACtH,IAAIH,IAAI,EAAE,OAAO,GAAGR,QAAQ,GAAGA,QAAQ,GAAG,GAAG,GAAG,EAAE,GAAGQ,IAAI,IAAIE,SAAS,EAAE,CAACC,IAAI,CAAC,CAAC;EAC/E,IAAIF,IAAI,EAAE,OAAO,GAAGT,QAAQ,GAAGA,QAAQ,GAAG,GAAG,GAAG,EAAE,GAAGS,IAAI,IAAIC,SAAS,EAAE,CAACC,IAAI,CAAC,CAAC;EAC/E,OAAO,EAAE;AACX;AAEA,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAMC,WAAW,GAAG,CAClB;IACEC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,kBAAkB;IACzBC,OAAO,EAAE,cAAc;IACvBC,QAAQ,EAAE,QAAQ;IAClBC,IAAI,EAAE,WAAW;IACjBC,MAAM,EAAE,aAAa;IACrBC,OAAO,EAAE,wCAAwC;IACjDC,WAAW,EAAE,8DAA8D;IAC3EC,SAAS,EAAE,IAAI;IACfC,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE,YAAY;IACtBC,OAAO,EAAE,KAAK;IACdC,SAAS,EAAE;EACb,CAAC,EACD;IACEd,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,gBAAgB;IACvBC,OAAO,EAAE,UAAU;IACnBC,QAAQ,EAAE,YAAY;IACtBC,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE,mCAAmC;IAC5CC,WAAW,EAAE,iEAAiE;IAC9EC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,YAAY;IACtBC,OAAO,EAAE,IAAI;IACbC,SAAS,EAAE;EACb,CAAC,EACD;IACEd,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,mBAAmB;IAC1BC,OAAO,EAAE,QAAQ;IACjBC,QAAQ,EAAE,YAAY;IACtBC,IAAI,EAAE,WAAW;IACjBC,MAAM,EAAE,aAAa;IACrBC,OAAO,EAAE,2BAA2B;IACpCC,WAAW,EAAE,qDAAqD;IAClEC,SAAS,EAAE,IAAI;IACfC,QAAQ,EAAE,KAAK;IACfC,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE,YAAY;IACtBC,OAAO,EAAE,KAAK;IACdC,SAAS,EAAE;EACb,CAAC,CACF;EAED,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGvC,QAAQ,CAAC,MAAM;IACrC,IAAI;MACF,MAAMwC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;MAC3C,OAAOF,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,GAAGlB,WAAW;IAC5C,CAAC,CAAC,OAAOT,CAAC,EAAE;MACV,OAAOS,WAAW;IACpB;EACF,CAAC,CAAC;;EAEF;EACAvB,SAAS,CAAC,MAAM;IACd,IAAI;MACF0C,YAAY,CAACI,OAAO,CAAC,SAAS,EAAEF,IAAI,CAACG,SAAS,CAACR,IAAI,CAAC,CAAC;IACvD,CAAC,CAAC,OAAOzB,CAAC,EAAE;MACV;IAAA;EAEJ,CAAC,EAAE,CAACyB,IAAI,CAAC,CAAC;;EAEV;EACAvC,SAAS,CAAC,MAAM;IACd,IAAIgD,OAAO,GAAG,IAAI;IAClB,eAAeC,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAW,CAAC;QACpC,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7B,IAAI,CAACN,OAAO,EAAE;QACd;QACN,MAAMO,UAAU,GAAGF,IAAI,CAACG,GAAG,CAACC,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAErB,QAAQ,EAAEqB,CAAC,CAACrB,QAAQ,GAAGqB,CAAC,CAACrB,QAAQ,CAACsB,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,GAAG;QAAG,CAAC,CAAC,CAAC;QACrGnB,OAAO,CAACe,UAAU,CAAC;MACrB,CAAC,CAAC,OAAOzC,CAAC,EAAE;QACV;MAAA;IAEJ;IACAmC,SAAS,CAAC,CAAC;IACX,OAAO,MAAM;MAAED,OAAO,GAAG,KAAK;IAAE,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,SAASY,MAAMA,CAACC,GAAG,EAAE;IACnB;IACA,OAAO,CAAC,MAAAC,gBAAA,IAAY;MAClB,IAAI;QACF,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;UAAEY,MAAM,EAAE,MAAM;UAAEC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAAEC,IAAI,EAAErB,IAAI,CAACG,SAAS,CAACc,GAAG;QAAE,CAAC,CAAC;QACpI,IAAIX,GAAG,CAACE,EAAE,EAAE;UACV,MAAMc,KAAK,GAAG,MAAMhB,GAAG,CAACI,IAAI,CAAC,CAAC;UAC9B;UACA,MAAMa,MAAM,GAAG;YACb3C,EAAE,EAAE0C,KAAK,CAACE,GAAG,IAAIF,KAAK,CAAC1C,EAAE,IAAI6C,IAAI,CAACC,GAAG,CAAC,CAAC;YACvC7C,KAAK,EAAEyC,KAAK,CAACzC,KAAK;YAClBC,OAAO,EAAEwC,KAAK,CAACxC,OAAO;YACtBC,QAAQ,EAAEuC,KAAK,CAACvC,QAAQ,KAAKuC,KAAK,CAACK,IAAI,GAAG,GAAGL,KAAK,CAACK,IAAI,GAAGL,KAAK,CAACM,eAAe,GAAG,IAAI,GAAGN,KAAK,CAACM,eAAe,GAAG,EAAE,GAAGN,KAAK,CAACO,OAAO,GAAG,IAAI,GAAGP,KAAK,CAACO,OAAO,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC;YACvKF,IAAI,EAAEL,KAAK,CAACK,IAAI,IAAI,IAAI;YACxBC,eAAe,EAAEN,KAAK,CAACM,eAAe,IAAI,IAAI;YAC9CC,OAAO,EAAEP,KAAK,CAACO,OAAO,IAAI,IAAI;YAC9B7C,IAAI,EAAEsC,KAAK,CAACtC,IAAI;YAChB8C,SAAS,EAAER,KAAK,CAACQ,SAAS;YAC1BC,SAAS,EAAET,KAAK,CAACS,SAAS;YAC1BnE,QAAQ,EAAE0D,KAAK,CAAC1D,QAAQ;YACxBqB,MAAM,EAAExB,YAAY,CAAC6D,KAAK,CAACQ,SAAS,EAAER,KAAK,CAACS,SAAS,EAAET,KAAK,CAAC1D,QAAQ,EAAE0D,KAAK,CAACU,eAAe,CAAC;YAC7FC,OAAO,EAAEX,KAAK,CAACW,OAAO;YACtBC,QAAQ,EAAEZ,KAAK,CAACY,QAAQ;YACxBhD,OAAO,EAAEoC,KAAK,CAACpC,OAAO;YACtBC,WAAW,EAAEmC,KAAK,CAACnC,WAAW;YAC9BC,SAAS,EAAEkC,KAAK,CAAClC,SAAS;YAC1BC,QAAQ,EAAEiC,KAAK,CAACjC,QAAQ;YACxBC,QAAQ,EAAEgC,KAAK,CAAChC,QAAQ;YACxBC,UAAU,EAAE+B,KAAK,CAAC/B,UAAU;YAC5BC,QAAQ,EAAE8B,KAAK,CAAC9B,QAAQ,GAAG8B,KAAK,CAAC9B,QAAQ,CAACsB,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,GAAG,IAAIU,IAAI,CAAC,CAAC,CAACU,WAAW,CAAC,CAAC,CAACpB,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC;YACvGtB,OAAO,EAAE6B,KAAK,CAAC7B,OAAO,IAAI,KAAK;YAC/BC,SAAS,EAAE4B,KAAK,CAAC5B,SAAS,IAAI;UAChC,CAAC;UACDE,OAAO,CAACwC,IAAI,IAAI,CAACb,MAAM,EAAE,GAAGa,IAAI,CAAC,CAAC;UAClC,OAAOb,MAAM;QACf;MACF,CAAC,CAAC,OAAOrD,CAAC,EAAE;QACV;MAAA;MAGF,MAAMmE,MAAM,GAAG;QACbzD,EAAE,EAAE6C,IAAI,CAACC,GAAG,CAAC,CAAC;QACd7C,KAAK,EAAEoC,GAAG,CAACpC,KAAK,IAAI,UAAU;QAC9BC,OAAO,EAAEmC,GAAG,CAACnC,OAAO,IAAI,SAAS;QACjCC,QAAQ,EAAEkC,GAAG,CAAClC,QAAQ,KAAKkC,GAAG,CAACU,IAAI,GAAG,GAAGV,GAAG,CAACU,IAAI,GAAGV,GAAG,CAACW,eAAe,GAAG,IAAI,GAAGX,GAAG,CAACW,eAAe,GAAG,EAAE,GAAGX,GAAG,CAACY,OAAO,GAAG,IAAI,GAAGZ,GAAG,CAACY,OAAO,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC;QACzJF,IAAI,EAAEV,GAAG,CAACU,IAAI,IAAI,IAAI;QACtBC,eAAe,EAAEX,GAAG,CAACW,eAAe,IAAI,IAAI;QAC5CC,OAAO,EAAEZ,GAAG,CAACY,OAAO,IAAI,IAAI;QAC5B7C,IAAI,EAAEiC,GAAG,CAACjC,IAAI,IAAI,EAAE;QACpB8C,SAAS,EAAEb,GAAG,CAACa,SAAS,IAAI,IAAI;QAChCC,SAAS,EAAEd,GAAG,CAACc,SAAS,IAAI,IAAI;QAChCnE,QAAQ,EAAEqD,GAAG,CAACrD,QAAQ,IAAI,EAAE;QAC5BqB,MAAM,EAAExB,YAAY,CAACwD,GAAG,CAACa,SAAS,EAAEb,GAAG,CAACc,SAAS,EAAEd,GAAG,CAACrD,QAAQ,EAAEqD,GAAG,CAACe,eAAe,CAAC;QACrFC,OAAO,EAAEhB,GAAG,CAACgB,OAAO,IAAI,IAAI;QAC5BC,QAAQ,EAAEjB,GAAG,CAACiB,QAAQ,IAAI,EAAE;QAC5BhD,OAAO,EAAE+B,GAAG,CAAC/B,OAAO,MAAAgC,gBAAA,GAAID,GAAG,CAAC9B,WAAW,cAAA+B,gBAAA,uBAAfA,gBAAA,CAAiBH,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,KAAI,EAAE;QAC5D5B,WAAW,EAAE8B,GAAG,CAAC9B,WAAW,IAAI8B,GAAG,CAAC/B,OAAO,IAAI,EAAE;QACjDE,SAAS,EAAE,CAAC,CAAC6B,GAAG,CAAC7B,SAAS;QAC1BC,QAAQ,EAAE4B,GAAG,CAACqB,eAAe,KAAK,QAAQ,IAAI,KAAK;QACnDhD,QAAQ,EAAE2B,GAAG,CAACqB,eAAe,KAAK,QAAQ,IAAI,KAAK;QACnD/C,UAAU,EAAE0B,GAAG,CAACjC,IAAI,IAAIiC,GAAG,CAACjC,IAAI,CAACuD,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,MAAM,CAAC;QAC/DhD,QAAQ,EAAE,IAAIiC,IAAI,CAAC,CAAC,CAACU,WAAW,CAAC,CAAC,CAACpB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;QAC/CtB,OAAO,EAAE,KAAK;QACdC,SAAS,EAAE,CAAC,CAACuB,GAAG,CAACvB;MACnB,CAAC;MACDE,OAAO,CAACwC,IAAI,IAAI,CAACC,MAAM,EAAE,GAAGD,IAAI,CAAC,CAAC;MAClC,OAAOC,MAAM;IACf,CAAC,EAAE,CAAC;EACN;EAEA,oBACE9E,OAAA,CAACC,WAAW,CAACiF,QAAQ;IAACC,KAAK,EAAE;MAAE/C,IAAI;MAAEC,OAAO;MAAEoB;IAAO,CAAE;IAAAvC,QAAA,EACpDA;EAAQ;IAAAkE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACpE,EAAA,CAxKeF,YAAY;AAAAuE,EAAA,GAAZvE,YAAY;AA0K5B,OAAO,SAASwE,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,MAAMC,GAAG,GAAG/F,UAAU,CAACK,WAAW,CAAC;EACnC,IAAI,CAAC0F,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EACrE,OAAOD,GAAG;AACZ;AAACD,GAAA,CAJeD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}