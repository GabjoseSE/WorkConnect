{"ast":null,"code":"import React,{useState,useRef,useEffect,useContext}from'react';import{Link,useLocation,useNavigate}from'react-router-dom';import'./Header.css';import logo from'../assets/logo.svg';import{useAuth}from'../contexts/AuthContext';import SignupContext from'../contexts/SignupContext';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Header(){const location=useLocation();// compact header for login/signup flows where only logo should remain visible\n// hide nav on login, any signup flows (jobhunter or employer), and choose-role\nconst hideNav=/^\\/login|^\\/signup|^\\/choose-role|^\\/employer-signup/.test(location.pathname);// dashboard-specific nav when viewing jobhunter dashboard\nconst isJobhunterDashboard=/^\\/jobhunter/.test(location.pathname);const{token,logout,profile}=useAuth();const navigate=useNavigate();// determine where the logo should link to when logged in\nconst loggedInHome=profile&&profile.role==='employer'?'/employer/dashboard':'/jobhunter/dashboard';// compute a display name from profile fields\nconst displayName=profile?profile.firstName||profile.name||(profile.firstName&&profile.lastName?\"\".concat(profile.firstName,\" \").concat(profile.lastName):null)||profile.companyName||profile.email:null;// Hooks must be declared unconditionally\nconst[open,setOpen]=useState(false);const menuRef=useRef(null);useEffect(()=>{function onDoc(e){if(menuRef.current&&!menuRef.current.contains(e.target))setOpen(false);}document.addEventListener('click',onDoc);return()=>document.removeEventListener('click',onDoc);},[]);// When the user is authenticated, hide the global header only on dashboard routes\n// match '/employer' or '/employer/' followed by dashboard sub-routes, but not '/employer-signup...'\nconst isEmployerDashboard=/^\\/employer(\\/|$)/.test(location.pathname);if(token&&(isJobhunterDashboard||isEmployerDashboard))return null;return/*#__PURE__*/_jsx(\"header\",{className:\"wc-header \".concat(hideNav?'wc-header--compact':''),children:/*#__PURE__*/_jsxs(\"div\",{className:\"wc-header-inner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"wc-left\",children:/*#__PURE__*/_jsx(LogoLink,{})}),!hideNav&&/*#__PURE__*/_jsx(\"nav\",{className:\"wc-center\",children:isJobhunterDashboard?/*#__PURE__*/// compact dashboard nav\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/jobhunter/dashboard\",children:\"Home\"}),/*#__PURE__*/_jsx(Link,{to:\"/jobhunter/jobs\",children:\"Jobs\"}),/*#__PURE__*/_jsx(Link,{to:\"/jobhunter/profile\",children:\"Profile\"})]}):/*#__PURE__*/// default site nav\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"}),/*#__PURE__*/_jsx(Link,{to:\"/about\",children:\"About\"}),/*#__PURE__*/_jsx(Link,{to:\"/contact\",children:\"Contact\"})]})}),!hideNav&&/*#__PURE__*/_jsxs(\"div\",{className:\"wc-right\",children:[/*#__PURE__*/_jsx(Link,{to:\"/login\",children:/*#__PURE__*/_jsx(\"button\",{className:\"wc-btn wc-btn-outline\",children:\"Login\"})}),/*#__PURE__*/_jsx(Link,{to:\"/choose-role\",children:/*#__PURE__*/_jsx(\"button\",{className:\"wc-btn wc-btn-primary\",children:\"Sign Up\"})})]})]})});}function LogoLink(){const location=useLocation();const signupCtx=useContext(SignupContext);return/*#__PURE__*/_jsxs(Link,{to:\"/\",className:\"wc-logo\",onClick:()=>{// If the user is on a signup-related path, clear the signup context so inputs reset next time\nif(/^\\/signup|^\\/choose-role|^\\/employer-signup/.test(location.pathname)){try{signupCtx&&signupCtx.reset&&signupCtx.reset();}catch(err){/* no-op */}}},children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"WorkConnect\",className:\"wc-logo-img\"}),/*#__PURE__*/_jsx(\"span\",{className:\"wc-logo-fallback\"})]});}","map":{"version":3,"names":["React","useState","useRef","useEffect","useContext","Link","useLocation","useNavigate","logo","useAuth","SignupContext","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Header","location","hideNav","test","pathname","isJobhunterDashboard","token","logout","profile","navigate","loggedInHome","role","displayName","firstName","name","lastName","concat","companyName","email","open","setOpen","menuRef","onDoc","e","current","contains","target","document","addEventListener","removeEventListener","isEmployerDashboard","className","children","LogoLink","to","signupCtx","onClick","reset","err","src","alt"],"sources":["C:/WorkConnect/WorkConnect/frontend/src/components/Header.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport './Header.css';\r\nimport logo from '../assets/logo.svg';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport SignupContext from '../contexts/SignupContext';\r\n\r\nexport default function Header() {\r\n  const location = useLocation();\r\n  // compact header for login/signup flows where only logo should remain visible\r\n  // hide nav on login, any signup flows (jobhunter or employer), and choose-role\r\n  const hideNav = /^\\/login|^\\/signup|^\\/choose-role|^\\/employer-signup/.test(location.pathname);\r\n  // dashboard-specific nav when viewing jobhunter dashboard\r\n  const isJobhunterDashboard = /^\\/jobhunter/.test(location.pathname);\r\n\r\n  const { token, logout, profile } = useAuth();\r\n  const navigate = useNavigate();\r\n  // determine where the logo should link to when logged in\r\n  const loggedInHome = profile && profile.role === 'employer' ? '/employer/dashboard' : '/jobhunter/dashboard';\r\n\r\n  // compute a display name from profile fields\r\n  const displayName = profile ? (profile.firstName || profile.name || (profile.firstName && profile.lastName ? `${profile.firstName} ${profile.lastName}` : null) || profile.companyName || profile.email) : null;\r\n\r\n  // Hooks must be declared unconditionally\r\n  const [open, setOpen] = useState(false);\r\n  const menuRef = useRef(null);\r\n  useEffect(() => {\r\n    function onDoc(e) {\r\n      if (menuRef.current && !menuRef.current.contains(e.target)) setOpen(false);\r\n    }\r\n    document.addEventListener('click', onDoc);\r\n    return () => document.removeEventListener('click', onDoc);\r\n  }, []);\r\n\r\n  // When the user is authenticated, hide the global header only on dashboard routes\r\n  // match '/employer' or '/employer/' followed by dashboard sub-routes, but not '/employer-signup...'\r\n  const isEmployerDashboard = /^\\/employer(\\/|$)/.test(location.pathname);\r\n  if (token && (isJobhunterDashboard || isEmployerDashboard)) return null;\r\n\r\n  return (\r\n    <header className={`wc-header ${hideNav ? 'wc-header--compact' : ''}`}>\r\n      <div className=\"wc-header-inner\">\r\n        <div className=\"wc-left\">\r\n          {/* When leaving the signup flow via the logo, clear transient signup state */}\r\n          <LogoLink />\r\n        </div>\r\n\r\n        {!hideNav && (\r\n          <nav className=\"wc-center\">\r\n            {isJobhunterDashboard ? (\r\n              // compact dashboard nav\r\n              <>\r\n                <Link to=\"/jobhunter/dashboard\">Home</Link>\r\n                <Link to=\"/jobhunter/jobs\">Jobs</Link>\r\n                <Link to=\"/jobhunter/profile\">Profile</Link>\r\n              </>\r\n            ) : (\r\n              // default site nav\r\n              <>\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/about\">About</Link>\r\n                <Link to=\"/contact\">Contact</Link>\r\n              </>\r\n            )}\r\n          </nav>\r\n        )}\r\n\r\n        {!hideNav && (\r\n          <div className=\"wc-right\">\r\n            <Link to=\"/login\"><button className=\"wc-btn wc-btn-outline\">Login</button></Link>\r\n            <Link to=\"/choose-role\"><button className=\"wc-btn wc-btn-primary\">Sign Up</button></Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nfunction LogoLink() {\r\n  const location = useLocation();\r\n  const signupCtx = useContext(SignupContext);\r\n\r\n  return (\r\n    <Link\r\n      to=\"/\"\r\n      className=\"wc-logo\"\r\n      onClick={() => {\r\n        // If the user is on a signup-related path, clear the signup context so inputs reset next time\r\n        if (/^\\/signup|^\\/choose-role|^\\/employer-signup/.test(location.pathname)) {\r\n          try { signupCtx && signupCtx.reset && signupCtx.reset(); } catch (err) { /* no-op */ }\r\n        }\r\n      }}\r\n    >\r\n      <img src={logo} alt=\"WorkConnect\" className=\"wc-logo-img\" />\r\n      <span className=\"wc-logo-fallback\"></span>\r\n    </Link>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}