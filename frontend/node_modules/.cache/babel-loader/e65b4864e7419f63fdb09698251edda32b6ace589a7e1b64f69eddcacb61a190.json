{"ast":null,"code":"export async function validatePhone(countryCode, nationalNumber) {\n  // countryCode like +63, nationalNumber like 9123456789\n  const full = `${countryCode}${nationalNumber}`;\n  try {\n    const lib = await import('libphonenumber-js');\n    const {\n      parsePhoneNumberFromString\n    } = lib;\n    const parsed = parsePhoneNumberFromString(full);\n    if (!parsed) return {\n      valid: false\n    };\n    return {\n      valid: parsed.isValid(),\n      e164: parsed.number\n    };\n  } catch (err) {\n    // Fallback: simple digit-only length check (not as accurate)\n    const digits = (nationalNumber || '').replace(/\\D/g, '');\n    if (digits.length < 7 || digits.length > 15) return {\n      valid: false\n    };\n    return {\n      valid: true,\n      e164: `${countryCode}${digits}`\n    };\n  }\n}\n\n// Named export only — avoids anonymous default export lint warnings","map":{"version":3,"names":["validatePhone","countryCode","nationalNumber","full","lib","parsePhoneNumberFromString","parsed","valid","isValid","e164","number","err","digits","replace","length"],"sources":["C:/Users/Aery/OneDrive/Documents/Coding Files/WorkConnect/frontend/src/utils/phone.js"],"sourcesContent":["export async function validatePhone(countryCode, nationalNumber) {\r\n  // countryCode like +63, nationalNumber like 9123456789\r\n  const full = `${countryCode}${nationalNumber}`;\r\n  try {\r\n    const lib = await import('libphonenumber-js');\r\n    const { parsePhoneNumberFromString } = lib;\r\n    const parsed = parsePhoneNumberFromString(full);\r\n    if (!parsed) return { valid: false };\r\n    return { valid: parsed.isValid(), e164: parsed.number };\r\n  } catch (err) {\r\n    // Fallback: simple digit-only length check (not as accurate)\r\n    const digits = (nationalNumber || '').replace(/\\D/g, '');\r\n    if (digits.length < 7 || digits.length > 15) return { valid: false };\r\n    return { valid: true, e164: `${countryCode}${digits}` };\r\n  }\r\n}\r\n\r\n// Named export only — avoids anonymous default export lint warnings\r\n"],"mappings":"AAAA,OAAO,eAAeA,aAAaA,CAACC,WAAW,EAAEC,cAAc,EAAE;EAC/D;EACA,MAAMC,IAAI,GAAG,GAAGF,WAAW,GAAGC,cAAc,EAAE;EAC9C,IAAI;IACF,MAAME,GAAG,GAAG,MAAM,MAAM,CAAC,mBAAmB,CAAC;IAC7C,MAAM;MAAEC;IAA2B,CAAC,GAAGD,GAAG;IAC1C,MAAME,MAAM,GAAGD,0BAA0B,CAACF,IAAI,CAAC;IAC/C,IAAI,CAACG,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAM,CAAC;IACpC,OAAO;MAAEA,KAAK,EAAED,MAAM,CAACE,OAAO,CAAC,CAAC;MAAEC,IAAI,EAAEH,MAAM,CAACI;IAAO,CAAC;EACzD,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ;IACA,MAAMC,MAAM,GAAG,CAACV,cAAc,IAAI,EAAE,EAAEW,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IACxD,IAAID,MAAM,CAACE,MAAM,GAAG,CAAC,IAAIF,MAAM,CAACE,MAAM,GAAG,EAAE,EAAE,OAAO;MAAEP,KAAK,EAAE;IAAM,CAAC;IACpE,OAAO;MAAEA,KAAK,EAAE,IAAI;MAAEE,IAAI,EAAE,GAAGR,WAAW,GAAGW,MAAM;IAAG,CAAC;EACzD;AACF;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}